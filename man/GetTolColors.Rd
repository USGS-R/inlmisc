% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetTolColors.R
\name{GetTolColors}
\alias{GetTolColors}
\title{Paul Tol's Color Schemes}
\usage{
GetTolColors(n, scheme = "smooth rainbow", alpha = NULL, start = 0,
  end = 1, bias = 1, reverse = FALSE, blindness = c("none",
  "deutan", "protan", "tritan"), fmt = c("HEX", "RGB"), plot = FALSE)
}
\arguments{
\item{n}{'integer'.
Number of colors to be in the palette.
The maximum number of colors is dependent on the specified color scheme,
see \sQuote{Details} section for upper limits.}

\item{scheme}{'character'.
Color scheme name: specify
  \code{"bright"}, \code{"vibrant"}, \code{"muted"}, \code{"pale"},
  \code{"dark"}, \code{"light"}, or \code{"ground cover"} for a qualitative color scheme;
  \code{"sunset"}, \code{"BuRd"}, or \code{"PRGn"} for a diverging color scheme; and
  \code{"YlOrBr"}, \code{"discrete rainbow"}, or \code{"smooth rainbow"} (the default)
  for a sequential color scheme.}

\item{alpha}{'numeric'.
Alpha transparency, values range from 0 (fully transparent) to 1 (fully opaque).
Specify as \code{NULL} to exclude the alpha channel value from the color name.}

\item{start, end}{'numeric'.
Starting and ending color level in the palette, respectively.
Specified as a number in the interval from 0 to 1.
Applies only to interpolated color schemes:
\code{"sunset"}, \code{"BuRd"}, \code{"PRGn"}, \code{"YlOrBr"}, and \code{"smooth rainbow"}.}

\item{bias}{'numeric'.
Interpolation bias where larger values result in more widely spaced colors at the high end.
See \code{\link[grDevices]{colorRamp}} function for details.}

\item{reverse}{'logical'.
Whether to reverse the direction of colors in the palette.}

\item{blindness}{'character'.
Type of color blindness to simulate:
\code{"none"} (the default), \code{"deutan"}, \code{"protan"}, or \code{"tritan"}.
Requires that the \pkg{dichromat} package is available,
see \code{\link[dichromat]{dichromat}} function for description of color-blindness types.}

\item{fmt}{'character'.
Format for returned color names.
Specify as \code{"HEX"} (the default) to express color components in hexadecimal (00 to FF)
or \code{"RGB"} in decimal (0 to 255), see \sQuote{Value} section for details.}

\item{plot}{'logical'.
Whether to display the palette colors in the active graphics window.}
}
\value{
For \code{fmt = "HEX"}, returns a 'character' vector of \code{n} color names in hexadecimal format.
  A hexadecimal color is specified with a string of the form \code{"#RRGGBB"} or \code{"#RRGGBBAA"}
  where \code{RR}, \code{GG}, \code{BB}, and \code{AA} are the red, green, blue, and alpha values, respectively.
  And for \code{fmt = "RGB"} an integer 'matrix' is returned with \code{n} rows and
  three or four (when \code{alpha} is specified) columns.
  The returned object includes a \code{"bad"} attribute giving
  the color name assigned to bad data---equal to \code{NA} if unspecified.
}
\description{
This function creates a vector of \code{n} colors from
qualitative, diverging, and sequential color schemes by Paul Tol (2018).
}
\details{
Upper limits on the number of discrete colors for a scheme are:
  \code{n < 8} for \code{"bright"} and \code{"vibrant"};
  \code{n < 10} for \code{"muted"}, \code{"light"}, \code{"YlOrBr"}, \code{"BuRd"}, and \code{"PRGn"};
  \code{n < 24} for \code{"discrete rainbow"}.
  Color schemes \code{"pale"} (\code{n = 6}),  \code{"dark"} (\code{n = 6}),
  and \code{"ground cover"} (\code{n = 14}) are intended to be
  accessed in their entirety and subset using color names.
  The very specific \code{"ground cover"} color scheme is a color-blind safe version of the
  \href{http://glcf.umd.edu/data/landcover/data.shtml}{AVHRR}
  global land cover classification color scheme (Hansen and others, 1998).
}
\examples{

col <- GetTolColors(5); print(col)
GetTolColors(5, fmt = "RGB")

# Qualitative color schemes (scheme)
op <- par(mfrow = c(6, 1), oma = c(0, 0, 0, 0))
GetTolColors(7, scheme = "bright",  plot = TRUE)
GetTolColors(7, scheme = "vibrant", plot = TRUE)
GetTolColors(9, scheme = "muted",   plot = TRUE)
GetTolColors(6, scheme = "pale",    plot = TRUE)
GetTolColors(6, scheme = "dark",    plot = TRUE)
GetTolColors(9, scheme = "light",   plot = TRUE)
par(op)

op <- par(oma = c(1, 0, 0, 0), cex = 0.7)
GetTolColors(14, scheme = "ground cover", plot = TRUE)
par(op)

# Diverging color schemes (scheme)
op <- par(mfrow = c(6, 1), oma = c(0, 0, 0, 0))
GetTolColors( 11, scheme = "sunset", plot = TRUE)
GetTolColors(255, scheme = "sunset", plot = TRUE)
GetTolColors(  9, scheme = "BuRd",   plot = TRUE)
GetTolColors(255, scheme = "BuRd",   plot = TRUE)
GetTolColors(  9, scheme = "PRGn",   plot = TRUE)
GetTolColors(255, scheme = "PRGn",   plot = TRUE)
par(op)

# Sequential color schemes (scheme)
op <- par(mfrow = c(5, 1), oma = c(0, 0, 0, 0))
GetTolColors(  9, scheme = "YlOrBr",           plot = TRUE)
GetTolColors(255, scheme = "YlOrBr",           plot = TRUE)
GetTolColors( 23, scheme = "discrete rainbow", plot = TRUE)
GetTolColors( 34, scheme = "smooth rainbow",   plot = TRUE)
GetTolColors(255, scheme = "smooth rainbow",   plot = TRUE)
par(op)

# Alpha transparency (alpha)
op <- par(mfrow = c(5, 1), oma = c(0, 0, 0, 0))
GetTolColors(34, alpha = 1.0, plot = TRUE)
GetTolColors(34, alpha = 0.8, plot = TRUE)
GetTolColors(34, alpha = 0.6, plot = TRUE)
GetTolColors(34, alpha = 0.4, plot = TRUE)
GetTolColors(34, alpha = 0.2, plot = TRUE)
par(op)

# Color levels (start, end)
op <- par(mfrow = c(4, 1), oma = c(0, 0, 0, 0))
GetTolColors(255, start = 0.0, end = 1.0, plot = TRUE)
GetTolColors(255, start = 0.0, end = 0.5, plot = TRUE)
GetTolColors(255, start = 0.5, end = 1.0, plot = TRUE)
GetTolColors(255, start = 0.3, end = 0.9, plot = TRUE)
par(op)

# Interpolation bias (bias)
op <- par(mfrow = c(7, 1), oma = c(0, 0, 0, 0))
GetTolColors(255, bias = 0.4, plot = TRUE)
GetTolColors(255, bias = 0.6, plot = TRUE)
GetTolColors(255, bias = 0.8, plot = TRUE)
GetTolColors(255, bias = 1.0, plot = TRUE)
GetTolColors(255, bias = 1.2, plot = TRUE)
GetTolColors(255, bias = 1.4, plot = TRUE)
GetTolColors(255, bias = 1.6, plot = TRUE)
par(op)

# Reverse colors (reverse)
op <- par(mfrow = c(2, 1), oma = c(0, 0, 0, 0), cex = 0.7)
GetTolColors(10, reverse = FALSE, plot = TRUE)
GetTolColors(10, reverse = TRUE,  plot = TRUE)
par(op)

# Color blindness (blindness)
op <- par(mfrow = c(4, 1), oma = c(0, 0, 0, 0))
GetTolColors(34, blindness = "none",   plot = TRUE)
GetTolColors(34, blindness = "deutan", plot = TRUE)
GetTolColors(34, blindness = "protan", plot = TRUE)
GetTolColors(34, blindness = "tritan", plot = TRUE)
par(op)

}
\references{
Hansen, M., DeFries, R., Townshend, J.R.G., and Sohlberg, R., 1998,
  UMD Global Land Cover Classification, 1 Kilometer, 1.0:
  Department of Geography, University of Maryland, College Park, Maryland, 1981-1994.

  Tol, Paul, 2018, Colour Schemes:
  SRON Technical Note, doc. no. SRON/EPS/TN/09-002, issue 3.0, 17 p.,
  accessed July 18, 2018 at \url{https://personal.sron.nl/~pault/data/colourschemes.pdf}.
}
\author{
J.C. Fisher, U.S. Geological Survey, Idaho Water Science Center
}
\keyword{color}
